# docker-compose.yml

version: "3.9"

services:
  db:
    image: postgres:15.1-alpine
    container_name: postgres
    restart: on-failure
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    ports:
     - "${POSTGRES_PORT}:${POSTGRES_PORT}"

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}

  celery:
    container_name: celery_worker
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
        - .env
    environment:
      POSTGRES_HOST: db
      REDIS_SERVER: redis
      CELERY_BROKER_URL: redis://redis:${REDIS_PORT}
      CELERY_RESULT_BACKEND: redis://redis:${REDIS_PORT}
    command: celery --app=src.api.tasks:celery worker --loglevel=INFO
    depends_on:
      - redis

  celery-beat:
      container_name: celery_beat
      build:
        context: .
        dockerfile: Dockerfile
      env_file:
        - .env
      environment:
        REDIS_SERVER: redis
        CELERY_BROKER_URL: redis://redis:${REDIS_PORT}
        CELERY_RESULT_BACKEND: redis://redis:${REDIS_PORT}
      command: celery --app=src.api.tasks:celery beat --loglevel=INFO
      links:
        - celery
        - redis
      depends_on:
        - celery

  mongo:
    image: mongo
    container_name: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    ports:
      - "27017:27017"

  mongo-express:
    image: mongo-express
    container_name: mongo_express
    restart: always
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_LOGIN}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongo:27017/
    links:
      - mongo
    ports:
      - "8081:8081"

networks:
  default:
      name: lan
